{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "dist/StaunchStore.js",
    "dist/actions.js",
    "dist/addEffects.js",
    "dist/addReducers.js",
    "dist/index.js",
    "dist/responses.js",
    "dist/subjects.js",
    "noop.js"
  ],
  "names": [],
  "mappingspl
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar BehaviorSubject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar Subject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar subjects_1 = require(\"./subjects\");\nvar addEffects_1 = require(\"./addEffects\");\nvar addReducers_1 = require(\"./addReducers\");\nvar StaunchStore = (function () {\n    function StaunchStore(props) {\n        this.isOpen = true;\n        this.state$ = new BehaviorSubject_1.BehaviorSubject(props.state);\n        this.subs = [];\n        this.userExtra$ = new BehaviorSubject_1.BehaviorSubject({});\n        this.newExtras$ = new Subject_1.Subject();\n        this.subs.push(this.newExtras$.scan(subjects_1.assignFn, {}).subscribe(this.userExtra$));\n        // reducers to act upon state\n        this.storeReducers = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newReducer$ = new Subject_1.Subject();\n        this.subs.push(this.newReducer$.scan(subjects_1.concatFn, []).subscribe(this.storeReducers));\n        // Mapped reducers\n        this.mappedReducers = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newMappedReducer$ = new Subject_1.Subject();\n        this.subs.push(this.newMappedReducer$.scan(subjects_1.concatFn, []).subscribe(this.mappedReducers));\n        // responses\n        this.storeResponses = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newResponses = new Subject_1.Subject();\n        this.subs.push(this.newResponses.scan(subjects_1.concatFn, []).subscribe(this.storeResponses));\n        // stream of actions\n        this.action$ = new Subject_1.Subject();\n        this.actionsWithState$ = this.action$.withLatestFrom(this.state$, function (action, state) {\n            return {\n                action: action,\n                state: state\n            };\n        });\n        this.actionsWithResultingStateUpdate$ = this.actionsWithState$;\n        this.postDispatchFns = [].concat(props.postDispatch).filter(Boolean);\n    }\n    StaunchStore.prototype.register = function (input) {\n        var state = input.state, reducers = input.reducers, effects = input.effects, responses = input.responses, extras = input.extras;\n        if (state) {\n            this._registerOnStateTree(state);\n        }\n        if (reducers) {\n            this._addReducers(reducers);\n        }\n        if (extras) {\n            this._addExtras(extras);\n        }\n        if (effects) {\n            this._addEffects(effects);\n        }\n        if (responses) {\n            this._addResponses(responses);\n        }\n        return this;\n    };\n    StaunchStore.prototype._registerOnStateTree = function (state) {\n        for (var key in state) {\n            // now init with action\n            this.dispatcher({\n                type: '@@NS-INIT(' + key + ')',\n                payload: {\n                    path: [key],\n                    value: state[key]\n                }\n            });\n        }\n    };\n    StaunchStore.prototype._addExtras = function (extras) {\n        var _this = this;\n        index_1.alwaysArray(extras).forEach(function (extra) {\n            _this.newExtras$.next(extra);\n        });\n    };\n    StaunchStore.prototype._addResponses = function (responses) {\n        var _this = this;\n        index_1.alwaysArray(responses).forEach(function (resp) {\n            Object.keys(resp).forEach(function (actionName) {\n                var item = resp[actionName];\n                _this.newResponses.next({\n                    name: actionName,\n                    path: [].concat(item.path).filter(Boolean),\n                    targetName: item.action\n                });\n            });\n        });\n    };\n    /**\n     * Dispatch 1 or many actions\n     * @param action\n     * @returns {*}\n     * @private\n     */\n    StaunchStore.prototype.dispatcher = function (action) {\n        var _this = this;\n        if (!this.isOpen) {\n            return;\n        }\n        if (Array.isArray(action)) {\n            action.forEach(function (a) {\n                _this.action$.next(a);\n            });\n        }\n        else {\n            this.action$.next(action);\n        }\n        if (this.postDispatchFns.length) {\n            this.postDispatchFns.forEach(function (fn) { return fn(action); });\n        }\n    };\n    StaunchStore.prototype._addMiddleware = function (middleware) {\n        var _this = this;\n        index_1.alwaysArray(middleware).forEach(function (middleware) {\n            middleware.call(null, _this);\n        });\n    };\n    StaunchStore.prototype._addEffects = function (incoming) {\n        var _this = this;\n        /**\n         * Default extras that get passed to all 'effects'\n         */\n        var storeExtras = {\n            state$: this.state$,\n            action$: this.action$,\n            actionsWithState$: this.actionsWithState$,\n            actionsWithResultingStateUpdate$: this.actionsWithState$\n        };\n        addEffects_1.gatherEffects(incoming, this.actionsWithState$, storeExtras, this.userExtra$)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Effect) {\n                _this.subs.push(outgoing.payload.subscribe(_this.dispatcher.bind(_this)));\n            }\n        });\n    };\n    StaunchStore.prototype._addReducers = function (incoming) {\n        var _this = this;\n        addReducers_1.gatherReducers(incoming)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Reducer) {\n                _this.newReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.MappedReducer) {\n                _this.newMappedReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.State) {\n                _this._registerOnStateTree(outgoing.payload);\n            }\n        });\n    };\n    StaunchStore.prototype.addReducers = function (reducers) {\n        this._addReducers(reducers);\n        return this;\n    };\n    StaunchStore.prototype.dispatch = function (action) {\n        this.dispatcher(action);\n        return this;\n    };\n    StaunchStore.prototype.getState = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({}));\n    };\n    StaunchStore.prototype.toJS = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({})).toJS();\n    };\n    StaunchStore.prototype.toJSON = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({})).toJSON();\n    };\n    StaunchStore.prototype.addMiddleware = function (middleware) {\n        this._addMiddleware(middleware);\n        return this;\n    };\n    StaunchStore.prototype.changes = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.map(function (x) { return x.getIn(lookup); })\n            .distinctUntilChanged();\n    };\n    StaunchStore.prototype.once = function (actions) {\n        var lookup = index_1.alwaysArray(actions);\n        return this.actionsWithState$.filter(function (x) {\n            return lookup.indexOf(x.action.type) > -1;\n        }).take(1);\n    };\n    StaunchStore.prototype.addExtras = function (extras) {\n        this._addExtras(extras);\n        return this;\n    };\n    StaunchStore.prototype.addEffects = function (effects) {\n        this._addEffects(effects);\n        return this;\n    };\n    StaunchStore.prototype.close = function () {\n        if (this.isOpen) {\n            this.subs.forEach(function (sub) { return sub.unsubscribe(); });\n            this.isOpen = false;\n        }\n        return this;\n    };\n    StaunchStore.prototype.ofType = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.actionsWithState$\n            .filter(function (_a) {\n            var action = _a.action;\n            return lookup.indexOf(action.type) > -1;\n        });\n    };\n    return StaunchStore;\n}());\nexports.StaunchStore = StaunchStore;\n//# sourceMappingURL=StaunchStore.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nfunction actionStream(intialState, action$, storeReducers, mappedReducers) {\n    return action$\n        .do(function (action) {\n        if (!index_1.isPlainObject(action)) {\n            return console.error('Please provide an object with at least a `type` property');\n        }\n        if ((typeof action.type) !== 'string') {\n            return console.error('Action was missing a `type` property', action);\n        }\n    })\n        .withLatestFrom(storeReducers, mappedReducers, function (action, reducers, mappedReducers) {\n        var mappedReducersThatMatchAction = mappedReducers\n            .filter(function (reducer) {\n            return reducer.name === action.type;\n        });\n        return {\n            action: action,\n            reducers: mappedReducersThatMatchAction.concat(reducers),\n        };\n    })\n        .scan(function (stateMap, _a) {\n        var action = _a.action, reducers = _a.reducers;\n        var actionType = action.type || (typeof action === 'string' ? action : '');\n        // is it a @@namespace ?\n        if (actionType.indexOf('@@NS-INIT') === 0) {\n            return stateMap.setIn(action.payload.path, index_1.alwaysMap((action.payload || {}).value));\n        }\n        else {\n            /**\n             * Iterate through all valid reducers\n             * This will include those registered via simple functions\n             * + those mapped to a path with a specific Action name\n             */\n            return reducers.reduce(function (outgoingValue, reducer) {\n                /**\n                 * Decide whether to pass {type: NAME, payload: VALUE}\n                 *                   or   VALUE only into the reducer\n                 *\n                 */\n                var reducerPayload = reducer.type === index_1.ReducerTypes.MappedReducer\n                    ? action.payload\n                    : action;\n                /**\n                 * Now use updateIn to call this reducers functions (there could be many)\n                 * on the value that lives at this point of the tree\n                 */\n                return outgoingValue.updateIn(reducer.path, function (currentValue) {\n                    return reducer.fns.reduce(function (value, fn) {\n                        return fn.call(null, value, reducerPayload, outgoingValue);\n                    }, currentValue);\n                });\n            }, stateMap);\n        }\n    }, intialState);\n}\nexports.actionStream = actionStream;\n//# sourceMappingURL=actions.js.map",
    "\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar addReducers_1 = require(\"./addReducers\");\nfunction gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$) {\n    var actionsApi = {\n        ofType: function (actionName) {\n            return actionsWithState$.filter(function (incoming) {\n                return incoming.action.type === actionName;\n            });\n        }\n    };\n    var extras = Object.assign({}, storeExtras, userExtra$.getValue());\n    return index_1.alwaysArray(incoming).reduce(function (acc, effect) {\n        if (typeof effect !== 'function') {\n            console.error('Effects must be functions, you provided', effect);\n        }\n        var stream = (function () {\n            if (effect.triggers && Array.isArray(effect.triggers)) {\n                return actionsWithState$.filter(function (incoming) {\n                    return ~effect.triggers.indexOf(incoming.action.type);\n                });\n            }\n            if (effect.trigger && typeof effect.trigger === 'string') {\n                return actionsWithState$.filter(function (incoming) {\n                    return effect.trigger === incoming.action.type;\n                });\n            }\n            return actionsApi;\n        })();\n        // todo, verify the output of this ie: ensure an observable\n        // was returned\n        var effectOutput = effect.call(null, stream, extras);\n        return acc.concat({\n            type: addReducers_1.InputTypes.Effect,\n            payload: effectOutput.map(function (action) {\n                return __assign({}, action, { via: '[effect]', name: (effect.name || '') });\n            })\n        });\n    }, []);\n}\nexports.gatherEffects = gatherEffects;\n//# sourceMappingURL=addEffects.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\n/**\n * Add either plain functions or {path, fns} pairs\n * @param reducers\n * outputTypes:\n *  - reducer\n *  - mappedReducer\n *  - effect\n *  - state\n * @private\n */\nvar InputTypes;\n(function (InputTypes) {\n    InputTypes[InputTypes[\"Reducer\"] = 'Reducer'] = \"Reducer\";\n    InputTypes[InputTypes[\"MappedReducer\"] = 'MappedReducers'] = \"MappedReducer\";\n    InputTypes[InputTypes[\"Effect\"] = 'Effect'] = \"Effect\";\n    InputTypes[InputTypes[\"State\"] = 'State'] = \"State\";\n})(InputTypes = exports.InputTypes || (exports.InputTypes = {}));\nfunction gatherReducers(incoming) {\n    return _addReducers(incoming, []);\n    function _addReducers(reducers, initial) {\n        return index_1.alwaysArray(reducers).reduce(function (acc, reducer) {\n            if (typeof reducer === 'function') {\n                return acc.concat({\n                    type: InputTypes.Reducer,\n                    payload: {\n                        path: [],\n                        fns: [reducer]\n                    }\n                });\n            }\n            if (index_1.isPlainObject(reducer)) {\n                if (reducer.state) {\n                    var reducers_1, state = void 0, effects = void 0;\n                    if (reducer.reducers) {\n                        /**\n                         * if 'state' and 'reducers' key were found,\n                         * we bind the reducers to that top-level state key\n                         */\n                        reducers_1 = Object.keys(reducer.state).reduce(function (acc, stateKey) {\n                            return acc.concat(_addReducers({ path: stateKey, fns: reducer.reducers }, []));\n                        }, []);\n                    }\n                    if (reducer.effects) {\n                        effects = reducer.effects;\n                    }\n                    /**\n                     *\n                     */\n                    state = reducer.state;\n                    return acc.concat(reducers_1, {\n                        type: InputTypes.Effect,\n                        payload: effects\n                    }, {\n                        type: InputTypes.State,\n                        payload: state\n                    });\n                }\n                if (reducer.path && reducer.reducers) {\n                    var maps = Object.keys(reducer.reducers).reduce(function (acc, name) {\n                        var currentFn = reducer.reducers[name];\n                        return acc.concat({\n                            type: InputTypes.MappedReducer,\n                            payload: {\n                                path: [].concat(reducer.path),\n                                fns: [currentFn],\n                                name: name,\n                                type: index_1.ReducerTypes.MappedReducer\n                            }\n                        });\n                    }, []);\n                    return acc.concat(maps);\n                }\n                /**\n                 * if path/fn pairs given\n                 */\n                if (reducer.path && reducer.fns) {\n                    return acc.concat({\n                        type: InputTypes.Reducer,\n                        payload: {\n                            path: [].concat(reducer.path).filter(Boolean),\n                            fns: [].concat(reducer.fns).filter(Boolean)\n                        }\n                    }, initial);\n                }\n                else {\n                    // redux style key: fn pairs\n                    var outgoing = Object.keys(reducer).reduce(function (acc, key) {\n                        return acc.concat({\n                            type: InputTypes.Reducer,\n                            payload: {\n                                path: [].concat(key).filter(Boolean),\n                                fns: [].concat(reducer[key]).filter(Boolean)\n                            }\n                        });\n                    }, []);\n                    return acc.concat(outgoing);\n                }\n            }\n            return acc;\n        }, initial);\n    }\n}\nexports.gatherReducers = gatherReducers;\n//# sourceMappingURL=addReducers.js.map",
    "\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Immutable = (typeof window !== \"undefined\" ? window['Immutable'] : typeof global !== \"undefined\" ? global['Immutable'] : null);\nvar actions_1 = require(\"./actions\");\nvar responses_1 = require(\"./responses\");\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nvar StaunchStore_1 = require(\"./StaunchStore\");\nexports.StaunchStore = StaunchStore_1.StaunchStore;\nvar ReducerTypes;\n(function (ReducerTypes) {\n    ReducerTypes[ReducerTypes[\"MappedReducer\"] = 'MappedReducer'] = \"MappedReducer\";\n    ReducerTypes[ReducerTypes[\"GlobalReducer\"] = 'GlobalReducer'] = \"GlobalReducer\";\n})(ReducerTypes = exports.ReducerTypes || (exports.ReducerTypes = {}));\nfunction createStore(props) {\n    if (props === void 0) { props = {}; }\n    var mergedInitialState = alwaysMap(props.state);\n    var store = new StaunchStore_1.StaunchStore(__assign({}, props, { state: mergedInitialState }));\n    var subs = [];\n    // stream\n    subs.push(actions_1.actionStream(mergedInitialState, store.action$, store.storeReducers, store.mappedReducers)\n        .subscribe(store.state$));\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    subs.push(responses_1.handleResponses(store.actionsWithState$, store.storeResponses)\n        .subscribe(function (action) { return store.dispatcher(action); }));\n    store.addReducers(props.reducers);\n    store.addEffects(props.effects);\n    store.addMiddleware(props.middleware);\n    store.addExtras(props.extras);\n    return store;\n}\nexports.createStore = createStore;\nfunction alwaysArray(input) {\n    return [].concat(input).filter(Boolean);\n}\nexports.alwaysArray = alwaysArray;\nfunction getMap(incoming) {\n    return Immutable.Map(incoming);\n}\nexports.getMap = getMap;\nfunction alwaysMap(input) {\n    return Immutable.Map.isMap(input) ? input : Immutable.fromJS(input || {});\n}\nexports.alwaysMap = alwaysMap;\nfunction isPlainObject(value) {\n    var objectTag = '[object Object]';\n    return Object.prototype.toString.call(value) === objectTag;\n}\nexports.isPlainObject = isPlainObject;\nexports.default = createStore;\nif ((typeof window !== 'undefined') && ((typeof window.staunch) === 'undefined')) {\n    window.staunch = {\n        createStore: createStore\n    };\n}\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar index_1 = require(\"./index\");\nfunction handleResponses(actionsWithState$, storeResponses) {\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    return actionsWithState$\n        .withLatestFrom(storeResponses)\n        .filter(function (_a) {\n        var _ = _a[0], storeResponses = _a[1];\n        return storeResponses.length > 0;\n    })\n        .flatMap(function (incoming) {\n        var _a = incoming[0], action = _a.action, state = _a.state;\n        var storeResponses = incoming[1];\n        var actionName = action.type;\n        var matchingResponses = storeResponses\n            .filter(function (response) { return response.name === actionName; });\n        var newActions = matchingResponses.map(function (x) {\n            return {\n                type: x.targetName,\n                payload: state.getIn(x.path, index_1.getMap({})).toJS(),\n                via: \"[response to (\" + actionName + \")]\"\n            };\n        });\n        return Observable_1.Observable.of(newActions);\n    });\n}\nexports.handleResponses = handleResponses;\n//# sourceMappingURL=responses.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assignFn(extras, incoming) {\n    return Object.assign({}, extras, incoming);\n}\nexports.assignFn = assignFn;\nfunction concatFn(acc, incoming) {\n    return acc.concat(incoming);\n}\nexports.concatFn = concatFn;\n//# sourceMappingURL=subjects.js.map",
    "//\n"
  ]
}
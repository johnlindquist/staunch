{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/StaunchStore.js","dist/actions.js","dist/addEffects.js","dist/addReducers.js","dist/index.js","dist/responses.js","dist/subjects.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","index_1","BehaviorSubject_1","window","global","Subject_1","subjects_1","addEffects_1","addReducers_1","StaunchStore","props","this","isOpen","state$","BehaviorSubject","state","subs","userExtra$","newExtras$","Subject","push","scan","assignFn","subscribe","storeReducers","newReducer$","concatFn","mappedReducers","newMappedReducer$","storeResponses","newResponses","action$","actionsWithState$","withLatestFrom","action","actionsWithResultingStateUpdate$","prototype","register","input","reducers","effects","responses","extras","_registerOnStateTree","_addReducers","_addEffects","_addResponses","_addExtras","key","dispatcher","type","payload","path","_this","alwaysArray","forEach","extra","next","resp","keys","actionName","item","name","concat","filter","Boolean","targetName","Array","isArray","_addMiddleware","middleware","incoming","storeExtras","gatherEffects","outgoing","InputTypes","Effect","bind","gatherReducers","Reducer","MappedReducer","State","addReducers","dispatch","getState","lookup","getValue","getIn","getMap","toJS","toJSON","addMiddleware","changes","map","x","distinctUntilChanged","once","actions","indexOf","take","addExtras","addEffects","close","sub","unsubscribe","ofType","_a","actionStream","intialState","do","isPlainObject","console","error","mappedReducersThatMatchAction","reducer","stateMap","actionType","setIn","alwaysMap","reduce","outgoingValue","reducerPayload","ReducerTypes","updateIn","currentValue","fns","fn","__assign","assign","arguments","p","hasOwnProperty","actionsApi","acc","effect","stream","triggers","trigger","effectOutput","via","initial","reducers_1","stateKey","maps","currentFn","Immutable","actions_1","responses_1","StaunchStore_1","createStore","mergedInitialState","store","handleResponses","Map","isMap","fromJS","objectTag","toString","default","staunch","Observable_1","_","flatMap","matchingResponses","response","newActions","Observable","of"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar BehaviorSubject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar Subject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar subjects_1 = require(\"./subjects\");\nvar addEffects_1 = require(\"./addEffects\");\nvar addReducers_1 = require(\"./addReducers\");\nvar StaunchStore = (function () {\n    function StaunchStore(props) {\n        this.isOpen = true;\n        this.state$ = new BehaviorSubject_1.BehaviorSubject(props.state);\n        this.subs = [];\n        this.userExtra$ = new BehaviorSubject_1.BehaviorSubject({});\n        this.newExtras$ = new Subject_1.Subject();\n        this.subs.push(this.newExtras$.scan(subjects_1.assignFn, {}).subscribe(this.userExtra$));\n        // reducers to act upon state\n        this.storeReducers = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newReducer$ = new Subject_1.Subject();\n        this.subs.push(this.newReducer$.scan(subjects_1.concatFn, []).subscribe(this.storeReducers));\n        // Mapped reducers\n        this.mappedReducers = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newMappedReducer$ = new Subject_1.Subject();\n        this.subs.push(this.newMappedReducer$.scan(subjects_1.concatFn, []).subscribe(this.mappedReducers));\n        // responses\n        this.storeResponses = new BehaviorSubject_1.BehaviorSubject([]);\n        this.newResponses = new Subject_1.Subject();\n        this.subs.push(this.newResponses.scan(subjects_1.concatFn, []).subscribe(this.storeResponses));\n        // stream of actions\n        this.action$ = new Subject_1.Subject();\n        this.actionsWithState$ = this.action$.withLatestFrom(this.state$, function (action, state) {\n            return {\n                action: action,\n                state: state\n            };\n        });\n        this.actionsWithResultingStateUpdate$ = this.actionsWithState$;\n    }\n    StaunchStore.prototype.register = function (input) {\n        var state = input.state, reducers = input.reducers, effects = input.effects, responses = input.responses, extras = input.extras;\n        if (state) {\n            this._registerOnStateTree(state);\n        }\n        if (reducers) {\n            this._addReducers(reducers);\n        }\n        if (effects) {\n            this._addEffects(effects);\n        }\n        if (responses) {\n            this._addResponses(responses);\n        }\n        if (extras) {\n            this._addExtras(extras);\n        }\n        return this;\n    };\n    StaunchStore.prototype._registerOnStateTree = function (state) {\n        for (var key in state) {\n            // now init with action\n            this.dispatcher({\n                type: '@@NS-INIT(' + key + ')',\n                payload: {\n                    path: [key],\n                    value: state[key]\n                }\n            });\n        }\n    };\n    StaunchStore.prototype._addExtras = function (extras) {\n        var _this = this;\n        index_1.alwaysArray(extras).forEach(function (extra) {\n            _this.newExtras$.next(extra);\n        });\n    };\n    StaunchStore.prototype._addResponses = function (responses) {\n        var _this = this;\n        index_1.alwaysArray(responses).forEach(function (resp) {\n            Object.keys(resp).forEach(function (actionName) {\n                var item = resp[actionName];\n                _this.newResponses.next({\n                    name: actionName,\n                    path: [].concat(item.path).filter(Boolean),\n                    targetName: item.action\n                });\n            });\n        });\n    };\n    /**\n     * Dispatch 1 or many actions\n     * @param action\n     * @returns {*}\n     * @private\n     */\n    StaunchStore.prototype.dispatcher = function (action) {\n        var _this = this;\n        if (!this.isOpen) {\n            return;\n        }\n        if (Array.isArray(action)) {\n            return action.forEach(function (a) {\n                _this.action$.next(a);\n            });\n        }\n        return this.action$.next(action);\n    };\n    StaunchStore.prototype._addMiddleware = function (middleware) {\n        var _this = this;\n        index_1.alwaysArray(middleware).forEach(function (middleware) {\n            middleware.call(null, _this);\n        });\n    };\n    StaunchStore.prototype._addEffects = function (incoming) {\n        var _this = this;\n        /**\n         * Default extras that get passed to all 'effects'\n         */\n        var storeExtras = {\n            state$: this.state$,\n            action$: this.action$,\n            actionsWithState$: this.actionsWithState$,\n            actionsWithResultingStateUpdate$: this.actionsWithState$\n        };\n        addEffects_1.gatherEffects(incoming, this.actionsWithState$, storeExtras, this.userExtra$)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Effect) {\n                _this.subs.push(outgoing.payload.subscribe(_this.dispatcher.bind(_this)));\n            }\n        });\n    };\n    StaunchStore.prototype._addReducers = function (incoming) {\n        var _this = this;\n        addReducers_1.gatherReducers(incoming)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Reducer) {\n                _this.newReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.MappedReducer) {\n                _this.newMappedReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.State) {\n                _this._registerOnStateTree(outgoing.payload);\n            }\n        });\n    };\n    StaunchStore.prototype.addReducers = function (reducers) {\n        this._addReducers(reducers);\n        return this;\n    };\n    StaunchStore.prototype.dispatch = function (action) {\n        this.dispatcher(action);\n        return this;\n    };\n    StaunchStore.prototype.getState = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({}));\n    };\n    StaunchStore.prototype.toJS = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({})).toJS();\n    };\n    StaunchStore.prototype.toJSON = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.getValue().getIn(lookup, index_1.getMap({})).toJSON();\n    };\n    StaunchStore.prototype.addMiddleware = function (middleware) {\n        this._addMiddleware(middleware);\n        return this;\n    };\n    StaunchStore.prototype.changes = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.state$.map(function (x) { return x.getIn(lookup); })\n            .distinctUntilChanged();\n    };\n    StaunchStore.prototype.once = function (actions) {\n        var lookup = index_1.alwaysArray(actions);\n        return this.actionsWithState$.filter(function (x) {\n            return lookup.indexOf(x.action.type) > -1;\n        }).take(1);\n    };\n    StaunchStore.prototype.addExtras = function (extras) {\n        this._addExtras(extras);\n        return this;\n    };\n    StaunchStore.prototype.addEffects = function (effects) {\n        this._addEffects(effects);\n        return this;\n    };\n    StaunchStore.prototype.close = function () {\n        if (this.isOpen) {\n            this.subs.forEach(function (sub) { return sub.unsubscribe(); });\n            this.isOpen = false;\n        }\n        return this;\n    };\n    StaunchStore.prototype.ofType = function (path) {\n        var lookup = index_1.alwaysArray(path);\n        return this.actionsWithState$\n            .filter(function (_a) {\n            var action = _a.action;\n            return lookup.indexOf(action.type) > -1;\n        });\n    };\n    return StaunchStore;\n}());\nexports.StaunchStore = StaunchStore;\n//# sourceMappingURL=StaunchStore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nfunction actionStream(intialState, action$, storeReducers, mappedReducers) {\n    return action$\n        .do(function (action) {\n        if (!index_1.isPlainObject(action)) {\n            return console.error('Please provide an object with at least a `type` property');\n        }\n        if ((typeof action.type) !== 'string') {\n            return console.error('Action was missing a `type` property', action);\n        }\n    })\n        .withLatestFrom(storeReducers, mappedReducers, function (action, reducers, mappedReducers) {\n        var mappedReducersThatMatchAction = mappedReducers\n            .filter(function (reducer) {\n            return reducer.name === action.type;\n        });\n        return {\n            action: action,\n            reducers: mappedReducersThatMatchAction.concat(reducers),\n        };\n    })\n        .scan(function (stateMap, _a) {\n        var action = _a.action, reducers = _a.reducers;\n        var actionType = action.type || (typeof action === 'string' ? action : '');\n        // is it a @@namespace ?\n        if (actionType.indexOf('@@NS-INIT') === 0) {\n            return stateMap.setIn(action.payload.path, index_1.alwaysMap((action.payload || {}).value));\n        }\n        else {\n            /**\n             * Iterate through all valid reducers\n             * This will include those registered via simple functions\n             * + those mapped to a path with a specific Action name\n             */\n            return reducers.reduce(function (outgoingValue, reducer) {\n                /**\n                 * Decide whether to pass {type: NAME, payload: VALUE}\n                 *                   or   VALUE only into the reducer\n                 *\n                 */\n                var reducerPayload = reducer.type === index_1.ReducerTypes.MappedReducer\n                    ? action.payload\n                    : action;\n                /**\n                 * Now use updateIn to call this reducers functions (there could be many)\n                 * on the value that lives at this point of the tree\n                 */\n                return outgoingValue.updateIn(reducer.path, function (currentValue) {\n                    return reducer.fns.reduce(function (value, fn) {\n                        return fn.call(null, value, reducerPayload, outgoingValue);\n                    }, currentValue);\n                });\n            }, stateMap);\n        }\n    }, intialState);\n}\nexports.actionStream = actionStream;\n//# sourceMappingURL=actions.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar addReducers_1 = require(\"./addReducers\");\nfunction gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$) {\n    var actionsApi = {\n        ofType: function (actionName) {\n            return actionsWithState$.filter(function (incoming) {\n                return incoming.action.type === actionName;\n            });\n        }\n    };\n    var extras = Object.assign({}, storeExtras, userExtra$.getValue());\n    return index_1.alwaysArray(incoming).reduce(function (acc, effect) {\n        if (typeof effect !== 'function') {\n            console.error('Effects must be functions, you provided', effect);\n        }\n        var stream = (function () {\n            if (effect.triggers && Array.isArray(effect.triggers)) {\n                return actionsWithState$.filter(function (incoming) {\n                    return ~effect.triggers.indexOf(incoming.action.type);\n                });\n            }\n            if (effect.trigger && typeof effect.trigger === 'string') {\n                return actionsWithState$.filter(function (incoming) {\n                    return effect.trigger === incoming.action.type;\n                });\n            }\n            return actionsApi;\n        })();\n        // todo, verify the output of this ie: ensure an observable\n        // was returned\n        var effectOutput = effect.call(null, stream, extras);\n        return acc.concat({\n            type: addReducers_1.InputTypes.Effect,\n            payload: effectOutput.map(function (action) {\n                return __assign({}, action, { via: '[effect]', name: (effect.name || '') });\n            })\n        });\n    }, []);\n}\nexports.gatherEffects = gatherEffects;\n//# sourceMappingURL=addEffects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\n/**\n * Add either plain functions or {path, fns} pairs\n * @param reducers\n * outputTypes:\n *  - reducer\n *  - mappedReducer\n *  - effect\n *  - state\n * @private\n */\nvar InputTypes;\n(function (InputTypes) {\n    InputTypes[InputTypes[\"Reducer\"] = 'Reducer'] = \"Reducer\";\n    InputTypes[InputTypes[\"MappedReducer\"] = 'MappedReducers'] = \"MappedReducer\";\n    InputTypes[InputTypes[\"Effect\"] = 'Effect'] = \"Effect\";\n    InputTypes[InputTypes[\"State\"] = 'State'] = \"State\";\n})(InputTypes = exports.InputTypes || (exports.InputTypes = {}));\nfunction gatherReducers(incoming) {\n    return _addReducers(incoming, []);\n    function _addReducers(reducers, initial) {\n        return index_1.alwaysArray(reducers).reduce(function (acc, reducer) {\n            if (typeof reducer === 'function') {\n                return acc.concat({\n                    type: InputTypes.Reducer,\n                    payload: {\n                        path: [],\n                        fns: [reducer]\n                    }\n                });\n            }\n            if (index_1.isPlainObject(reducer)) {\n                if (reducer.state) {\n                    var reducers_1, state = void 0, effects = void 0;\n                    if (reducer.reducers) {\n                        /**\n                         * if 'state' and 'reducers' key were found,\n                         * we bind the reducers to that top-level state key\n                         */\n                        reducers_1 = Object.keys(reducer.state).reduce(function (acc, stateKey) {\n                            return acc.concat(_addReducers({ path: stateKey, fns: reducer.reducers }, []));\n                        }, []);\n                    }\n                    if (reducer.effects) {\n                        effects = reducer.effects;\n                    }\n                    /**\n                     *\n                     */\n                    state = reducer.state;\n                    return acc.concat(reducers_1, {\n                        type: InputTypes.Effect,\n                        payload: effects\n                    }, {\n                        type: InputTypes.State,\n                        payload: state\n                    });\n                }\n                if (reducer.path && reducer.reducers) {\n                    var maps = Object.keys(reducer.reducers).reduce(function (acc, name) {\n                        var currentFn = reducer.reducers[name];\n                        return acc.concat({\n                            type: InputTypes.MappedReducer,\n                            payload: {\n                                path: [].concat(reducer.path),\n                                fns: [currentFn],\n                                name: name,\n                                type: index_1.ReducerTypes.MappedReducer\n                            }\n                        });\n                    }, []);\n                    return acc.concat(maps);\n                }\n                /**\n                 * if path/fn pairs given\n                 */\n                if (reducer.path && reducer.fns) {\n                    return acc.concat({\n                        type: InputTypes.Reducer,\n                        payload: {\n                            path: [].concat(reducer.path).filter(Boolean),\n                            fns: [].concat(reducer.fns).filter(Boolean)\n                        }\n                    }, initial);\n                }\n                else {\n                    // redux style key: fn pairs\n                    var outgoing = Object.keys(reducer).reduce(function (acc, key) {\n                        return acc.concat({\n                            type: InputTypes.Reducer,\n                            payload: {\n                                path: [].concat(key).filter(Boolean),\n                                fns: [].concat(reducer[key]).filter(Boolean)\n                            }\n                        });\n                    }, []);\n                    return acc.concat(outgoing);\n                }\n            }\n            return acc;\n        }, initial);\n    }\n}\nexports.gatherReducers = gatherReducers;\n//# sourceMappingURL=addReducers.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Immutable = (typeof window !== \"undefined\" ? window['Immutable'] : typeof global !== \"undefined\" ? global['Immutable'] : null);\nvar actions_1 = require(\"./actions\");\nvar responses_1 = require(\"./responses\");\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nvar StaunchStore_1 = require(\"./StaunchStore\");\nexports.StaunchStore = StaunchStore_1.StaunchStore;\nvar ReducerTypes;\n(function (ReducerTypes) {\n    ReducerTypes[ReducerTypes[\"MappedReducer\"] = 'MappedReducer'] = \"MappedReducer\";\n    ReducerTypes[ReducerTypes[\"GlobalReducer\"] = 'GlobalReducer'] = \"GlobalReducer\";\n})(ReducerTypes = exports.ReducerTypes || (exports.ReducerTypes = {}));\nfunction createStore(props) {\n    if (props === void 0) { props = {}; }\n    var mergedInitialState = alwaysMap(props.state);\n    var store = new StaunchStore_1.StaunchStore(__assign({}, props, { state: mergedInitialState }));\n    var subs = [];\n    // stream\n    subs.push(actions_1.actionStream(mergedInitialState, store.action$, store.storeReducers, store.mappedReducers)\n        .subscribe(store.state$));\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    subs.push(responses_1.handleResponses(store.actionsWithState$, store.storeResponses)\n        .subscribe(function (action) { return store.dispatcher(action); }));\n    store.addReducers(props.reducers);\n    store.addEffects(props.effects);\n    store.addMiddleware(props.middleware);\n    store.addExtras(props.extras);\n    return store;\n}\nexports.createStore = createStore;\nfunction alwaysArray(input) {\n    return [].concat(input).filter(Boolean);\n}\nexports.alwaysArray = alwaysArray;\nfunction getMap(incoming) {\n    return Immutable.Map(incoming);\n}\nexports.getMap = getMap;\nfunction alwaysMap(input) {\n    return Immutable.Map.isMap(input) ? input : Immutable.fromJS(input || {});\n}\nexports.alwaysMap = alwaysMap;\nfunction isPlainObject(value) {\n    var objectTag = '[object Object]';\n    return Object.prototype.toString.call(value) === objectTag;\n}\nexports.isPlainObject = isPlainObject;\nexports.default = createStore;\nif ((typeof window !== 'undefined') && ((typeof window.staunch) === 'undefined')) {\n    window.staunch = {\n        createStore: createStore\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar index_1 = require(\"./index\");\nfunction handleResponses(actionsWithState$, storeResponses) {\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    return actionsWithState$\n        .withLatestFrom(storeResponses)\n        .filter(function (_a) {\n        var _ = _a[0], storeResponses = _a[1];\n        return storeResponses.length > 0;\n    })\n        .flatMap(function (incoming) {\n        var _a = incoming[0], action = _a.action, state = _a.state;\n        var storeResponses = incoming[1];\n        var actionName = action.type;\n        var matchingResponses = storeResponses\n            .filter(function (response) { return response.name === actionName; });\n        var newActions = matchingResponses.map(function (x) {\n            return {\n                type: x.targetName,\n                payload: state.getIn(x.path, index_1.getMap({})).toJS(),\n                via: \"[response to (\" + actionName + \")]\"\n            };\n        });\n        return Observable_1.Observable.of(newActions);\n    });\n}\nexports.handleResponses = handleResponses;\n//# sourceMappingURL=responses.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assignFn(extras, incoming) {\n    return Object.assign({}, extras, incoming);\n}\nexports.assignFn = assignFn;\nfunction concatFn(acc, incoming) {\n    return acc.concat(incoming);\n}\nexports.concatFn = concatFn;\n//# sourceMappingURL=subjects.js.map"]}
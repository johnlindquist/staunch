{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/actions.js","dist/addEffects.js","dist/addReducers.js","dist/index.js","dist/responses.js","dist/subjects.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","index_1","actionStream","intialState","action$","storeReducers","mappedReducers","do","action","isPlainObject","console","error","type","withLatestFrom","reducers","mappedReducersThatMatchAction","filter","reducer","name","concat","scan","stateMap","_a","actionType","indexOf","setIn","payload","path","alwaysMap","reduce","outgoingValue","reducerPayload","ReducerTypes","MappedReducer","updateIn","currentValue","fns","fn","__assign","this","assign","arguments","p","prototype","hasOwnProperty","addReducers_1","gatherEffects","incoming","actionsWithState$","storeExtras","userExtra$","actionsApi","ofType","actionName","extras","getValue","alwaysArray","acc","effect","stream","triggers","Array","isArray","trigger","effectOutput","InputTypes","Effect","map","via","gatherReducers","_addReducers","initial","Reducer","state","reducers_1","effects","keys","stateKey","State","maps","currentFn","Boolean","outgoing","key","Immutable","window","global","actions_1","responses_1","addEffects_1","subjects_1","BehaviorSubject_1","Subject_1","createStore","initialState","initialReducers","initialEffects","initialMiddleware","initialExtras","mergedInitialState","state$","BehaviorSubject","subs","newExtras$","Subject","push","assignFn","subscribe","newReducer$","concatFn","newMappedReducer$","storeResponses","newResponses","handleResponses","_dispatcher","actionsWithResultingStateUpdate$","forEach","next","_addMiddleware","middleware","api","_addExtras","extra","_registerOnStateTree","_addResponses","responses","resp","item","targetName","_addEffects","isOpen","register","input","addReducers","dispatch","getState","lookup","getIn","getMap","toJS","toJSON","addMiddleware","once","actions","x","take","changes","distinctUntilChanged","addExtras","close","sub","unsubscribe","Map","isMap","fromJS","objectTag","toString","default","staunch","Observable_1","_","flatMap","matchingResponses","response","newActions","Observable","of"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nfunction actionStream(intialState, action$, storeReducers, mappedReducers) {\n    return action$\n        .do(function (action) {\n        if (!index_1.isPlainObject(action)) {\n            return console.error('Please provide an object with at least a `type` property');\n        }\n        if ((typeof action.type) !== 'string') {\n            return console.error('Action was missing a `type` property', action);\n        }\n    })\n        .withLatestFrom(storeReducers, mappedReducers, function (action, reducers, mappedReducers) {\n        var mappedReducersThatMatchAction = mappedReducers\n            .filter(function (reducer) {\n            return reducer.name === action.type;\n        });\n        return {\n            action: action,\n            reducers: mappedReducersThatMatchAction.concat(reducers),\n        };\n    })\n        .scan(function (stateMap, _a) {\n        var action = _a.action, reducers = _a.reducers;\n        var actionType = action.type || (typeof action === 'string' ? action : '');\n        // is it a @@namespace ?\n        if (actionType.indexOf('@@NS-INIT') === 0) {\n            return stateMap.setIn(action.payload.path, index_1.alwaysMap((action.payload || {}).value));\n        }\n        else {\n            /**\n             * Iterate through all valid reducers\n             * This will include those registered via simple functions\n             * + those mapped to a path with a specific Action name\n             */\n            return reducers.reduce(function (outgoingValue, reducer) {\n                /**\n                 * Decide whether to pass {type: NAME, payload: VALUE}\n                 *                   or   VALUE only into the reducer\n                 *\n                 */\n                var reducerPayload = reducer.type === index_1.ReducerTypes.MappedReducer\n                    ? action.payload\n                    : action;\n                /**\n                 * Now use updateIn to call this reducers functions (there could be many)\n                 * on the value that lives at this point of the tree\n                 */\n                return outgoingValue.updateIn(reducer.path, function (currentValue) {\n                    return reducer.fns.reduce(function (value, fn) {\n                        return fn.call(null, value, reducerPayload, outgoingValue);\n                    }, currentValue);\n                });\n            }, stateMap);\n        }\n    }, intialState);\n}\nexports.actionStream = actionStream;\n//# sourceMappingURL=actions.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar addReducers_1 = require(\"./addReducers\");\nfunction gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$) {\n    var actionsApi = {\n        ofType: function (actionName) {\n            return actionsWithState$.filter(function (incoming) {\n                return incoming.action.type === actionName;\n            });\n        }\n    };\n    var extras = Object.assign({}, storeExtras, userExtra$.getValue());\n    return index_1.alwaysArray(incoming).reduce(function (acc, effect) {\n        if (typeof effect !== 'function') {\n            console.error('Effects must be functions, you provided', effect);\n        }\n        var stream = (function () {\n            if (effect.triggers && Array.isArray(effect.triggers)) {\n                return actionsWithState$.filter(function (incoming) {\n                    return ~effect.triggers.indexOf(incoming.action.type);\n                });\n            }\n            if (effect.trigger && typeof effect.trigger === 'string') {\n                return actionsWithState$.filter(function (incoming) {\n                    return effect.trigger === incoming.action.type;\n                });\n            }\n            return actionsApi;\n        })();\n        // todo, verify the output of this ie: ensure an observable\n        // was returned\n        var effectOutput = effect.call(null, stream, extras);\n        return acc.concat({\n            type: addReducers_1.InputTypes.Effect,\n            payload: effectOutput.map(function (action) {\n                return __assign({}, action, { via: '[effect]', name: (effect.name || '') });\n            })\n        });\n    }, []);\n}\nexports.gatherEffects = gatherEffects;\n//# sourceMappingURL=addEffects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\n/**\n * Add either plain functions or {path, fns} pairs\n * @param reducers\n * outputTypes:\n *  - reducer\n *  - mappedReducer\n *  - effect\n *  - state\n * @private\n */\nvar InputTypes;\n(function (InputTypes) {\n    InputTypes[InputTypes[\"Reducer\"] = 'Reducer'] = \"Reducer\";\n    InputTypes[InputTypes[\"MappedReducer\"] = 'MappedReducers'] = \"MappedReducer\";\n    InputTypes[InputTypes[\"Effect\"] = 'Effect'] = \"Effect\";\n    InputTypes[InputTypes[\"State\"] = 'State'] = \"State\";\n})(InputTypes = exports.InputTypes || (exports.InputTypes = {}));\nfunction gatherReducers(incoming) {\n    return _addReducers(incoming, []);\n    function _addReducers(reducers, initial) {\n        return index_1.alwaysArray(reducers).reduce(function (acc, reducer) {\n            if (typeof reducer === 'function') {\n                return acc.concat({\n                    type: InputTypes.Reducer,\n                    payload: {\n                        path: [],\n                        fns: [reducer]\n                    }\n                });\n            }\n            if (index_1.isPlainObject(reducer)) {\n                if (reducer.state) {\n                    var reducers_1, state = void 0, effects = void 0;\n                    if (reducer.reducers) {\n                        /**\n                         * if 'state' and 'reducers' key were found,\n                         * we bind the reducers to that top-level state key\n                         */\n                        reducers_1 = Object.keys(reducer.state).reduce(function (acc, stateKey) {\n                            return acc.concat(_addReducers({ path: stateKey, fns: reducer.reducers }, []));\n                        }, []);\n                    }\n                    if (reducer.effects) {\n                        effects = reducer.effects;\n                    }\n                    /**\n                     *\n                     */\n                    state = reducer.state;\n                    return acc.concat(reducers_1, {\n                        type: InputTypes.Effect,\n                        payload: effects\n                    }, {\n                        type: InputTypes.State,\n                        payload: state\n                    });\n                }\n                if (reducer.path && reducer.reducers) {\n                    var maps = Object.keys(reducer.reducers).reduce(function (acc, name) {\n                        var currentFn = reducer.reducers[name];\n                        return acc.concat({\n                            type: InputTypes.MappedReducer,\n                            payload: {\n                                path: [].concat(reducer.path),\n                                fns: [currentFn],\n                                name: name,\n                                type: index_1.ReducerTypes.MappedReducer\n                            }\n                        });\n                    }, []);\n                    return acc.concat(maps);\n                }\n                /**\n                 * if path/fn pairs given\n                 */\n                if (reducer.path && reducer.fns) {\n                    return acc.concat({\n                        type: InputTypes.Reducer,\n                        payload: {\n                            path: [].concat(reducer.path).filter(Boolean),\n                            fns: [].concat(reducer.fns).filter(Boolean)\n                        }\n                    }, initial);\n                }\n                else {\n                    // redux style key: fn pairs\n                    var outgoing = Object.keys(reducer).reduce(function (acc, key) {\n                        return acc.concat({\n                            type: InputTypes.Reducer,\n                            payload: {\n                                path: [].concat(key).filter(Boolean),\n                                fns: [].concat(reducer[key]).filter(Boolean)\n                            }\n                        });\n                    }, []);\n                    return acc.concat(outgoing);\n                }\n            }\n            return acc;\n        }, initial);\n    }\n}\nexports.gatherReducers = gatherReducers;\n//# sourceMappingURL=addReducers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Immutable = (typeof window !== \"undefined\" ? window['Immutable'] : typeof global !== \"undefined\" ? global['Immutable'] : null);\nvar actions_1 = require(\"./actions\");\nvar responses_1 = require(\"./responses\");\nvar addReducers_1 = require(\"./addReducers\");\nvar addEffects_1 = require(\"./addEffects\");\nvar subjects_1 = require(\"./subjects\");\nvar BehaviorSubject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar Subject_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nrequire('./../noop.js');\nvar ReducerTypes;\n(function (ReducerTypes) {\n    ReducerTypes[ReducerTypes[\"MappedReducer\"] = 'MappedReducer'] = \"MappedReducer\";\n    ReducerTypes[ReducerTypes[\"GlobalReducer\"] = 'GlobalReducer'] = \"GlobalReducer\";\n})(ReducerTypes = exports.ReducerTypes || (exports.ReducerTypes = {}));\nfunction createStore(initialState, initialReducers, initialEffects, initialMiddleware, initialExtras) {\n    var mergedInitialState = alwaysMap(initialState);\n    var state$ = new BehaviorSubject_1.BehaviorSubject(mergedInitialState);\n    var subs = [];\n    var userExtra$ = new BehaviorSubject_1.BehaviorSubject({});\n    var newExtras$ = new Subject_1.Subject();\n    subs.push(newExtras$.scan(subjects_1.assignFn, {}).subscribe(userExtra$));\n    // reducers to act upon state\n    var storeReducers = new BehaviorSubject_1.BehaviorSubject([]);\n    var newReducer$ = new Subject_1.Subject();\n    subs.push(newReducer$.scan(subjects_1.concatFn, []).subscribe(storeReducers));\n    // Mapped reducers\n    var mappedReducers = new BehaviorSubject_1.BehaviorSubject([]);\n    var newMappedReducer$ = new Subject_1.Subject();\n    subs.push(newMappedReducer$.scan(subjects_1.concatFn, []).subscribe(mappedReducers));\n    // responses\n    var storeResponses = new BehaviorSubject_1.BehaviorSubject([]);\n    var newResponses = new Subject_1.Subject();\n    subs.push(newResponses.scan(subjects_1.concatFn, []).subscribe(storeResponses));\n    // stream of actions\n    var action$ = new Subject_1.Subject();\n    // stream\n    subs.push(actions_1.actionStream(mergedInitialState, action$, storeReducers, mappedReducers)\n        .subscribe(state$));\n    /**\n     * Create a stream that has updates + resulting state updates\n     */\n    var actionsWithState$ = action$.withLatestFrom(state$, function (action, state) {\n        return {\n            action: action,\n            state: state\n        };\n    });\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    subs.push(responses_1.handleResponses(actionsWithState$, storeResponses)\n        .subscribe(function (action) { return _dispatcher(action); }));\n    /**\n     * Default extras that get passed to all 'effects'\n     */\n    var storeExtras = {\n        state$: state$,\n        action$: action$,\n        actionsWithState$: actionsWithState$,\n        actionsWithResultingStateUpdate$: actionsWithState$\n    };\n    /**\n     * Dispatch 1 or many actions\n     * @param action\n     * @returns {*}\n     * @private\n     */\n    function _dispatcher(action) {\n        if (Array.isArray(action)) {\n            return action.forEach(function (a) {\n                action$.next(a);\n            });\n        }\n        return action$.next(action);\n    }\n    function _addMiddleware(middleware) {\n        alwaysArray(middleware).forEach(function (middleware) {\n            middleware.call(null, api);\n        });\n    }\n    function _addExtras(extras) {\n        alwaysArray(extras).forEach(function (extra) {\n            newExtras$.next(extra);\n        });\n    }\n    function _registerOnStateTree(state) {\n        for (var key in state) {\n            // now init with action\n            _dispatcher({\n                type: '@@NS-INIT(' + key + ')',\n                payload: {\n                    path: [key],\n                    value: state[key]\n                }\n            });\n        }\n    }\n    function _addResponses(responses) {\n        alwaysArray(responses).forEach(function (resp) {\n            Object.keys(resp).forEach(function (actionName) {\n                var item = resp[actionName];\n                newResponses.next({\n                    name: actionName,\n                    path: [].concat(item.path).filter(Boolean),\n                    targetName: item.action\n                });\n            });\n        });\n    }\n    function _addEffects(incoming) {\n        addEffects_1.gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Effect) {\n                subs.push(outgoing.payload.subscribe(_dispatcher));\n            }\n        });\n    }\n    function _addReducers(incoming) {\n        addReducers_1.gatherReducers(incoming)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Reducer) {\n                newReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.MappedReducer) {\n                newMappedReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.State) {\n                _registerOnStateTree(outgoing.payload);\n            }\n        });\n    }\n    var api = {\n        isOpen: true,\n        state$: state$,\n        action$: action$,\n        actionsWithState$: actionsWithState$,\n        actionsWithResultingStateUpdate$: actionsWithState$,\n        register: function (input) {\n            var state = input.state, reducers = input.reducers, effects = input.effects, responses = input.responses;\n            if (state) {\n                _registerOnStateTree(state);\n            }\n            if (reducers) {\n                _addReducers(reducers);\n            }\n            if (effects) {\n                _addEffects(effects);\n            }\n            if (responses) {\n                _addResponses(responses);\n            }\n            return api;\n        },\n        addReducers: function (reducers) {\n            _addReducers(reducers);\n            return api;\n        },\n        dispatch: function (action) {\n            _dispatcher(action);\n            return api;\n        },\n        getState: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({}));\n        },\n        toJS: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({})).toJS();\n        },\n        toJSON: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({})).toJSON();\n        },\n        addMiddleware: function (middleware) {\n            _addMiddleware(middleware);\n            return api;\n        },\n        once: function (actions) {\n            var lookup = alwaysArray(actions);\n            return actionsWithState$.filter(function (x) {\n                return lookup.indexOf(x.action.type) > -1;\n            }).take(1);\n        },\n        changes: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.map(function (x) { return x.getIn(lookup); })\n                .distinctUntilChanged();\n        },\n        addExtras: function (extras) {\n            _addExtras(extras);\n            return api;\n        },\n        close: function () {\n            if (api.isOpen) {\n                subs.forEach(function (sub) { return sub.unsubscribe(); });\n                api.isOpen = false;\n            }\n            return api;\n        }\n    };\n    // add initial ones\n    _addReducers(initialReducers);\n    _addEffects(initialEffects);\n    _addMiddleware(initialMiddleware);\n    _addExtras(initialExtras);\n    return api;\n}\nexports.createStore = createStore;\nfunction alwaysArray(input) {\n    return [].concat(input).filter(Boolean);\n}\nexports.alwaysArray = alwaysArray;\nfunction getMap(incoming) {\n    return Immutable.Map(incoming);\n}\nexports.getMap = getMap;\nfunction alwaysMap(input) {\n    return Immutable.Map.isMap(input) ? input : Immutable.fromJS(input || {});\n}\nexports.alwaysMap = alwaysMap;\nfunction isPlainObject(value) {\n    var objectTag = '[object Object]';\n    return Object.prototype.toString.call(value) === objectTag;\n}\nexports.isPlainObject = isPlainObject;\nexports.default = createStore;\nif ((typeof window !== 'undefined') && ((typeof window.staunch) === 'undefined')) {\n    window.staunch = {\n        createStore: createStore\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = (typeof window !== \"undefined\" ? window['Rx'] : typeof global !== \"undefined\" ? global['Rx'] : null);\nvar index_1 = require(\"./index\");\nfunction handleResponses(actionsWithState$, storeResponses) {\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    return actionsWithState$\n        .withLatestFrom(storeResponses)\n        .filter(function (_a) {\n        var _ = _a[0], storeResponses = _a[1];\n        return storeResponses.length > 0;\n    })\n        .flatMap(function (incoming) {\n        var _a = incoming[0], action = _a.action, state = _a.state;\n        var storeResponses = incoming[1];\n        var actionName = action.type;\n        var matchingResponses = storeResponses\n            .filter(function (response) { return response.name === actionName; });\n        var newActions = matchingResponses.map(function (x) {\n            return {\n                type: x.targetName,\n                payload: state.getIn(x.path, index_1.getMap({})).toJS(),\n                via: \"[response to (\" + actionName + \")]\"\n            };\n        });\n        return Observable_1.Observable.of(newActions);\n    });\n}\nexports.handleResponses = handleResponses;\n//# sourceMappingURL=responses.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assignFn(extras, incoming) {\n    return Object.assign({}, extras, incoming);\n}\nexports.assignFn = assignFn;\nfunction concatFn(acc, incoming) {\n    return acc.concat(incoming);\n}\nexports.concatFn = concatFn;\n//# sourceMappingURL=subjects.js.map"]}
{"version":3,"sources":["node_modules/browser-pack/_prelude.js","dist/actions.js","dist/addEffects.js","dist/addReducers.js","dist/index.js","dist/responses.js","dist/subjects.js","node_modules/rxjs/BehaviorSubject.js","node_modules/rxjs/InnerSubscriber.js","node_modules/rxjs/Observable.js","node_modules/rxjs/Observer.js","node_modules/rxjs/OuterSubscriber.js","node_modules/rxjs/Subject.js","node_modules/rxjs/SubjectSubscription.js","node_modules/rxjs/Subscriber.js","node_modules/rxjs/Subscription.js","node_modules/rxjs/add/observable/of.js","node_modules/rxjs/add/operator/distinctUntilChanged.js","node_modules/rxjs/add/operator/do.js","node_modules/rxjs/add/operator/filter.js","node_modules/rxjs/add/operator/map.js","node_modules/rxjs/add/operator/mergeMap.js","node_modules/rxjs/add/operator/scan.js","node_modules/rxjs/add/operator/take.js","node_modules/rxjs/add/operator/withLatestFrom.js","node_modules/rxjs/observable/ArrayObservable.js","node_modules/rxjs/observable/EmptyObservable.js","node_modules/rxjs/observable/ScalarObservable.js","node_modules/rxjs/observable/of.js","node_modules/rxjs/operator/distinctUntilChanged.js","node_modules/rxjs/operator/do.js","node_modules/rxjs/operator/filter.js","node_modules/rxjs/operator/map.js","node_modules/rxjs/operator/mergeMap.js","node_modules/rxjs/operator/scan.js","node_modules/rxjs/operator/take.js","node_modules/rxjs/operator/withLatestFrom.js","node_modules/rxjs/symbol/iterator.js","node_modules/rxjs/symbol/observable.js","node_modules/rxjs/symbol/rxSubscriber.js","node_modules/rxjs/util/ArgumentOutOfRangeError.js","node_modules/rxjs/util/ObjectUnsubscribedError.js","node_modules/rxjs/util/UnsubscriptionError.js","node_modules/rxjs/util/errorObject.js","node_modules/rxjs/util/isArray.js","node_modules/rxjs/util/isArrayLike.js","node_modules/rxjs/util/isFunction.js","node_modules/rxjs/util/isObject.js","node_modules/rxjs/util/isPromise.js","node_modules/rxjs/util/isScheduler.js","node_modules/rxjs/util/root.js","node_modules/rxjs/util/subscribeToResult.js","node_modules/rxjs/util/toSubscriber.js","node_modules/rxjs/util/tryCatch.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Object","defineProperty","value","index_1","actionStream","intialState","action$","storeReducers","mappedReducers","do","action","isPlainObject","console","error","type","withLatestFrom","reducers","mappedReducersThatMatchAction","filter","reducer","name","concat","scan","stateMap","_a","actionType","indexOf","setIn","payload","path","alwaysMap","reduce","outgoingValue","reducerPayload","ReducerTypes","MappedReducer","updateIn","currentValue","fns","fn","__assign","this","assign","arguments","p","prototype","hasOwnProperty","addReducers_1","gatherEffects","incoming","actionsWithState$","storeExtras","userExtra$","actionsApi","ofType","actionName","extras","getValue","alwaysArray","acc","effect","stream","triggers","Array","isArray","trigger","effectOutput","InputTypes","Effect","map","via","gatherReducers","_addReducers","initial","Reducer","state","reducers_1","effects","keys","stateKey","State","maps","currentFn","Boolean","outgoing","key","Immutable","window","global","actions_1","responses_1","addEffects_1","subjects_1","BehaviorSubject","Subject","createStore","initialState","initialReducers","initialEffects","initialMiddleware","initialExtras","mergedInitialState","state$","subs","newExtras$","push","assignFn","subscribe","newReducer$","concatFn","newMappedReducer$","storeResponses","newResponses","handleResponses","_dispatcher","actionsWithResultingStateUpdate$","forEach","next","_addMiddleware","middleware","api","_addExtras","extra","_registerOnStateTree","_addResponses","responses","resp","item","targetName","_addEffects","isOpen","register","input","addReducers","dispatch","getState","lookup","getIn","getMap","toJS","toJSON","addMiddleware","once","actions","x","take","changes","distinctUntilChanged","addExtras","close","sub","unsubscribe","Map","isMap","fromJS","objectTag","toString","default","staunch","Observable_1","_","flatMap","matchingResponses","response","newActions","Observable","of","__extends","d","b","__","constructor","create","Subject_1","ObjectUnsubscribedError_1","_super","_value","get","enumerable","configurable","_subscribe","subscriber","subscription","closed","hasError","thrownError","ObjectUnsubscribedError","Subscriber_1","InnerSubscriber","parent","outerValue","outerIndex","index","_next","notifyNext","_error","notifyError","_complete","notifyComplete","Subscriber","root_1","toSubscriber_1","observable_1","_isScalar","lift","operator","observable","source","observerOrNext","complete","sink","toSubscriber","add","_trySubscribe","syncErrorThrowable","syncErrorThrown","syncErrorValue","err","PromiseCtor","_this","root","Rx","config","Promise","resolve","reject","empty","OuterSubscriber","apply","innerValue","innerIndex","innerSub","destination","Subscription_1","SubjectSubscription_1","rxSubscriber_1","SubjectSubscriber","observers","isStopped","rxSubscriber","subject","AnonymousSubject","len","copy","slice","Subscription","EMPTY","SubjectSubscription","asObservable","subscriberIndex","splice","isFunction_1","Observer_1","destinationOrNext","SafeSubscriber","_unsubscribeAndRecycle","_parent","_parents","_parentSubscriber","context","isFunction","bind","_context","__tryOrUnsub","__tryOrSetError","_unsubscribe","isArray_1","isObject_1","tryCatch_1","errorObject_1","UnsubscriptionError_1","_subscriptions","hasErrors","errors","remove","trial","tryCatch","errorObject","UnsubscriptionError","flattenUnsubscriptionErrors","isObject","teardown","_addParent","tmp","subscriptions","subscriptionIndex","errs","of_1","distinctUntilChanged_1","do_1","_do","filter_1","map_1","mergeMap_1","mergeMap","scan_1","take_1","withLatestFrom_1","ScalarObservable_1","EmptyObservable_1","isScheduler_1","ArrayObservable","array","scheduler","_i","isScheduler","pop","ScalarObservable","EmptyObservable","count","schedule","arg","done","ArrayObservable_1","compare","keySelector","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","result","nextOrObserver","DoOperator","DoSubscriber","safeSubscriber","predicate","thisArg","FilterOperator","FilterSubscriber","project","TypeError","MapOperator","MapSubscriber","subscribeToResult_1","OuterSubscriber_1","resultSelector","concurrent","Number","POSITIVE_INFINITY","MergeMapOperator","observer","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","_innerSub","ish","subscribeToResult","_notifyResultSelector","shift","accumulator","seed","hasSeed","ScanOperator","ScanSubscriber","_seed","set","ArgumentOutOfRangeError_1","TakeOperator","total","ArgumentOutOfRangeError","TakeSubscriber","args","observables","WithLatestFromOperator","WithLatestFromSubscriber","toRespond","values","found","_tryProject","symbolIteratorPonyfill","Symbol","iterator","Set_1","Set","Map_1","getOwnPropertyNames","$$iterator","getSymbolObservable","$$observable","for","$$rxSubscriber","stack","message","join","isArrayLike","isPromise","then","self","isArrayLike_1","isPromise_1","iterator_1","InnerSubscriber_1","outerSubscriber","setTimeout","obs","msg","tryCatchTarget","tryCatcher"],"mappings":"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","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nfunction actionStream(intialState, action$, storeReducers, mappedReducers) {\n    return action$\n        .do(function (action) {\n        if (!index_1.isPlainObject(action)) {\n            return console.error('Please provide an object with at least a `type` property');\n        }\n        if ((typeof action.type) !== 'string') {\n            return console.error('Action was missing a `type` property', action);\n        }\n    })\n        .withLatestFrom(storeReducers, mappedReducers, function (action, reducers, mappedReducers) {\n        var mappedReducersThatMatchAction = mappedReducers\n            .filter(function (reducer) {\n            return reducer.name === action.type;\n        });\n        return {\n            action: action,\n            reducers: mappedReducersThatMatchAction.concat(reducers),\n        };\n    })\n        .scan(function (stateMap, _a) {\n        var action = _a.action, reducers = _a.reducers;\n        var actionType = action.type || (typeof action === 'string' ? action : '');\n        // is it a @@namespace ?\n        if (actionType.indexOf('@@NS-INIT') === 0) {\n            return stateMap.setIn(action.payload.path, index_1.alwaysMap((action.payload || {}).value));\n        }\n        else {\n            /**\n             * Iterate through all valid reducers\n             * This will include those registered via simple functions\n             * + those mapped to a path with a specific Action name\n             */\n            return reducers.reduce(function (outgoingValue, reducer) {\n                /**\n                 * Decide whether to pass {type: NAME, payload: VALUE}\n                 *                   or   VALUE only into the reducer\n                 *\n                 */\n                var reducerPayload = reducer.type === index_1.ReducerTypes.MappedReducer\n                    ? action.payload\n                    : action;\n                /**\n                 * Now use updateIn to call this reducers functions (there could be many)\n                 * on the value that lives at this point of the tree\n                 */\n                return outgoingValue.updateIn(reducer.path, function (currentValue) {\n                    return reducer.fns.reduce(function (value, fn) {\n                        return fn.call(null, value, reducerPayload, outgoingValue);\n                    }, currentValue);\n                });\n            }, stateMap);\n        }\n    }, intialState);\n}\nexports.actionStream = actionStream;\n//# sourceMappingURL=actions.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\nvar addReducers_1 = require(\"./addReducers\");\nfunction gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$) {\n    var actionsApi = {\n        ofType: function (actionName) {\n            return actionsWithState$.filter(function (incoming) {\n                return incoming.action.type === actionName;\n            });\n        }\n    };\n    var extras = Object.assign({}, storeExtras, userExtra$.getValue());\n    return index_1.alwaysArray(incoming).reduce(function (acc, effect) {\n        if (typeof effect !== 'function') {\n            console.error('Effects must be functions, you provided', effect);\n        }\n        var stream = (function () {\n            if (effect.triggers && Array.isArray(effect.triggers)) {\n                return actionsWithState$.filter(function (incoming) {\n                    return ~effect.triggers.indexOf(incoming.action.type);\n                });\n            }\n            if (effect.trigger && typeof effect.trigger === 'string') {\n                return actionsWithState$.filter(function (incoming) {\n                    return effect.trigger === incoming.action.type;\n                });\n            }\n            return actionsApi;\n        })();\n        // todo, verify the output of this ie: ensure an observable\n        // was returned\n        var effectOutput = effect.call(null, stream, extras);\n        return acc.concat({\n            type: addReducers_1.InputTypes.Effect,\n            payload: effectOutput.map(function (action) {\n                return __assign({}, action, { via: '[effect]', name: (effect.name || '') });\n            })\n        });\n    }, []);\n}\nexports.gatherEffects = gatherEffects;\n//# sourceMappingURL=addEffects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar index_1 = require(\"./index\");\n/**\n * Add either plain functions or {path, fns} pairs\n * @param reducers\n * outputTypes:\n *  - reducer\n *  - mappedReducer\n *  - effect\n *  - state\n * @private\n */\nvar InputTypes;\n(function (InputTypes) {\n    InputTypes[InputTypes[\"Reducer\"] = 'Reducer'] = \"Reducer\";\n    InputTypes[InputTypes[\"MappedReducer\"] = 'MappedReducers'] = \"MappedReducer\";\n    InputTypes[InputTypes[\"Effect\"] = 'Effect'] = \"Effect\";\n    InputTypes[InputTypes[\"State\"] = 'State'] = \"State\";\n})(InputTypes = exports.InputTypes || (exports.InputTypes = {}));\nfunction gatherReducers(incoming) {\n    return _addReducers(incoming, []);\n    function _addReducers(reducers, initial) {\n        return index_1.alwaysArray(reducers).reduce(function (acc, reducer) {\n            if (typeof reducer === 'function') {\n                return acc.concat({\n                    type: InputTypes.Reducer,\n                    payload: {\n                        path: [],\n                        fns: [reducer]\n                    }\n                });\n            }\n            if (index_1.isPlainObject(reducer)) {\n                if (reducer.state) {\n                    var reducers_1, state = void 0, effects = void 0;\n                    if (reducer.reducers) {\n                        /**\n                         * if 'state' and 'reducers' key were found,\n                         * we bind the reducers to that top-level state key\n                         */\n                        reducers_1 = Object.keys(reducer.state).reduce(function (acc, stateKey) {\n                            return acc.concat(_addReducers({ path: stateKey, fns: reducer.reducers }, []));\n                        }, []);\n                    }\n                    if (reducer.effects) {\n                        effects = reducer.effects;\n                    }\n                    /**\n                     *\n                     */\n                    state = reducer.state;\n                    return acc.concat(reducers_1, {\n                        type: InputTypes.Effect,\n                        payload: effects\n                    }, {\n                        type: InputTypes.State,\n                        payload: state\n                    });\n                }\n                if (reducer.path && reducer.reducers) {\n                    var maps = Object.keys(reducer.reducers).reduce(function (acc, name) {\n                        var currentFn = reducer.reducers[name];\n                        return acc.concat({\n                            type: InputTypes.MappedReducer,\n                            payload: {\n                                path: [].concat(reducer.path),\n                                fns: [currentFn],\n                                name: name,\n                                type: index_1.ReducerTypes.MappedReducer\n                            }\n                        });\n                    }, []);\n                    return acc.concat(maps);\n                }\n                /**\n                 * if path/fn pairs given\n                 */\n                if (reducer.path && reducer.fns) {\n                    return acc.concat({\n                        type: InputTypes.Reducer,\n                        payload: {\n                            path: [].concat(reducer.path).filter(Boolean),\n                            fns: [].concat(reducer.fns).filter(Boolean)\n                        }\n                    }, initial);\n                }\n                else {\n                    // redux style key: fn pairs\n                    var outgoing = Object.keys(reducer).reduce(function (acc, key) {\n                        return acc.concat({\n                            type: InputTypes.Reducer,\n                            payload: {\n                                path: [].concat(key).filter(Boolean),\n                                fns: [].concat(reducer[key]).filter(Boolean)\n                            }\n                        });\n                    }, []);\n                    return acc.concat(outgoing);\n                }\n            }\n            return acc;\n        }, initial);\n    }\n}\nexports.gatherReducers = gatherReducers;\n//# sourceMappingURL=addReducers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs/add/operator/scan\");\nrequire(\"rxjs/add/operator/map\");\nrequire(\"rxjs/add/operator/filter\");\nrequire(\"rxjs/add/operator/withLatestFrom\");\nrequire(\"rxjs/add/operator/distinctUntilChanged\");\nrequire(\"rxjs/add/operator/take\");\nrequire(\"rxjs/add/operator/do\");\nrequire(\"rxjs/add/operator/mergeMap\");\nrequire(\"rxjs/add/observable/of\");\nvar Immutable = (typeof window !== \"undefined\" ? window['Immutable'] : typeof global !== \"undefined\" ? global['Immutable'] : null);\nvar actions_1 = require(\"./actions\");\nvar responses_1 = require(\"./responses\");\nvar addReducers_1 = require(\"./addReducers\");\nvar addEffects_1 = require(\"./addEffects\");\nvar subjects_1 = require(\"./subjects\");\nvar BehaviorSubject = require('rxjs/BehaviorSubject').BehaviorSubject;\nvar Subject = require('rxjs/subject').Subject;\nvar ReducerTypes;\n(function (ReducerTypes) {\n    ReducerTypes[ReducerTypes[\"MappedReducer\"] = 'MappedReducer'] = \"MappedReducer\";\n    ReducerTypes[ReducerTypes[\"GlobalReducer\"] = 'GlobalReducer'] = \"GlobalReducer\";\n})(ReducerTypes = exports.ReducerTypes || (exports.ReducerTypes = {}));\nfunction createStore(initialState, initialReducers, initialEffects, initialMiddleware, initialExtras) {\n    var mergedInitialState = alwaysMap(initialState);\n    var state$ = new BehaviorSubject(mergedInitialState);\n    var subs = [];\n    var userExtra$ = new BehaviorSubject({});\n    var newExtras$ = new Subject();\n    subs.push(newExtras$.scan(subjects_1.assignFn, {}).subscribe(userExtra$));\n    // reducers to act upon state\n    var storeReducers = new BehaviorSubject([]);\n    var newReducer$ = new Subject();\n    subs.push(newReducer$.scan(subjects_1.concatFn, []).subscribe(storeReducers));\n    // Mapped reducers\n    var mappedReducers = new BehaviorSubject([]);\n    var newMappedReducer$ = new Subject();\n    subs.push(newMappedReducer$.scan(subjects_1.concatFn, []).subscribe(mappedReducers));\n    // responses\n    var storeResponses = new BehaviorSubject([]);\n    var newResponses = new Subject();\n    subs.push(newResponses.scan(subjects_1.concatFn, []).subscribe(storeResponses));\n    // stream of actions\n    var action$ = new Subject();\n    // stream\n    subs.push(actions_1.actionStream(mergedInitialState, action$, storeReducers, mappedReducers)\n        .subscribe(state$));\n    /**\n     * Create a stream that has updates + resulting state updates\n     */\n    var actionsWithState$ = action$.withLatestFrom(state$, function (action, state) {\n        return {\n            action: action,\n            state: state\n        };\n    });\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    subs.push(responses_1.handleResponses(actionsWithState$, storeResponses)\n        .subscribe(function (action) { return _dispatcher(action); }));\n    /**\n     * Default extras that get passed to all 'effects'\n     */\n    var storeExtras = {\n        state$: state$,\n        action$: action$,\n        actionsWithState$: actionsWithState$,\n        actionsWithResultingStateUpdate$: actionsWithState$\n    };\n    /**\n     * Dispatch 1 or many actions\n     * @param action\n     * @returns {*}\n     * @private\n     */\n    function _dispatcher(action) {\n        if (Array.isArray(action)) {\n            return action.forEach(function (a) {\n                action$.next(a);\n            });\n        }\n        return action$.next(action);\n    }\n    function _addMiddleware(middleware) {\n        alwaysArray(middleware).forEach(function (middleware) {\n            middleware.call(null, api);\n        });\n    }\n    function _addExtras(extras) {\n        alwaysArray(extras).forEach(function (extra) {\n            newExtras$.next(extra);\n        });\n    }\n    function _registerOnStateTree(state) {\n        for (var key in state) {\n            // now init with action\n            _dispatcher({\n                type: '@@NS-INIT(' + key + ')',\n                payload: {\n                    path: [key],\n                    value: state[key]\n                }\n            });\n        }\n    }\n    function _addResponses(responses) {\n        alwaysArray(responses).forEach(function (resp) {\n            Object.keys(resp).forEach(function (actionName) {\n                var item = resp[actionName];\n                newResponses.next({\n                    name: actionName,\n                    path: [].concat(item.path).filter(Boolean),\n                    targetName: item.action\n                });\n            });\n        });\n    }\n    function _addEffects(incoming) {\n        addEffects_1.gatherEffects(incoming, actionsWithState$, storeExtras, userExtra$)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Effect) {\n                subs.push(outgoing.payload.subscribe(_dispatcher));\n            }\n        });\n    }\n    function _addReducers(incoming) {\n        addReducers_1.gatherReducers(incoming)\n            .forEach(function (outgoing) {\n            if (outgoing.type === addReducers_1.InputTypes.Reducer) {\n                newReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.MappedReducer) {\n                newMappedReducer$.next(outgoing.payload);\n            }\n            if (outgoing.type === addReducers_1.InputTypes.State) {\n                _registerOnStateTree(outgoing.payload);\n            }\n        });\n    }\n    var api = {\n        isOpen: true,\n        state$: state$,\n        action$: action$,\n        actionsWithState$: actionsWithState$,\n        actionsWithResultingStateUpdate$: actionsWithState$,\n        register: function (input) {\n            var state = input.state, reducers = input.reducers, effects = input.effects, responses = input.responses;\n            if (state) {\n                _registerOnStateTree(state);\n            }\n            if (reducers) {\n                _addReducers(reducers);\n            }\n            if (effects) {\n                _addEffects(effects);\n            }\n            if (responses) {\n                _addResponses(responses);\n            }\n            return api;\n        },\n        addReducers: function (reducers) {\n            _addReducers(reducers);\n            return api;\n        },\n        dispatch: function (action) {\n            _dispatcher(action);\n            return api;\n        },\n        getState: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({}));\n        },\n        toJS: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({})).toJS();\n        },\n        toJSON: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.getValue().getIn(lookup, getMap({})).toJSON();\n        },\n        addMiddleware: function (middleware) {\n            _addMiddleware(middleware);\n            return api;\n        },\n        once: function (actions) {\n            var lookup = alwaysArray(actions);\n            return actionsWithState$.filter(function (x) {\n                return lookup.indexOf(x.action.type) > -1;\n            }).take(1);\n        },\n        changes: function (path) {\n            var lookup = alwaysArray(path);\n            return state$.map(function (x) { return x.getIn(lookup); })\n                .distinctUntilChanged();\n        },\n        addExtras: function (extras) {\n            _addExtras(extras);\n            return api;\n        },\n        close: function () {\n            if (api.isOpen) {\n                subs.forEach(function (sub) { return sub.unsubscribe(); });\n                api.isOpen = false;\n            }\n            return api;\n        }\n    };\n    // add initial ones\n    _addReducers(initialReducers);\n    _addEffects(initialEffects);\n    _addMiddleware(initialMiddleware);\n    _addExtras(initialExtras);\n    return api;\n}\nexports.createStore = createStore;\nfunction alwaysArray(input) {\n    return [].concat(input).filter(Boolean);\n}\nexports.alwaysArray = alwaysArray;\nfunction getMap(incoming) {\n    return Immutable.Map(incoming);\n}\nexports.getMap = getMap;\nfunction alwaysMap(input) {\n    return Immutable.Map.isMap(input) ? input : Immutable.fromJS(input || {});\n}\nexports.alwaysMap = alwaysMap;\nfunction isPlainObject(value) {\n    var objectTag = '[object Object]';\n    return Object.prototype.toString.call(value) === objectTag;\n}\nexports.isPlainObject = isPlainObject;\nexports.default = createStore;\nif ((typeof window !== 'undefined') && ((typeof window.staunch) === 'undefined')) {\n    window.staunch = {\n        createStore: createStore\n    };\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"rxjs/Observable\");\nrequire(\"rxjs/add/observable/of\");\nrequire(\"rxjs/add/operator/scan\");\nrequire(\"rxjs/add/operator/map\");\nrequire(\"rxjs/add/operator/filter\");\nrequire(\"rxjs/add/operator/withLatestFrom\");\nrequire(\"rxjs/add/operator/take\");\nrequire(\"rxjs/add/operator/mergeMap\");\nvar index_1 = require(\"./index\");\nfunction handleResponses(actionsWithState$, storeResponses) {\n    /**\n     * Setup responses for declarative cross-domain communication\n     */\n    return actionsWithState$\n        .withLatestFrom(storeResponses)\n        .filter(function (_a) {\n        var _ = _a[0], storeResponses = _a[1];\n        return storeResponses.length > 0;\n    })\n        .flatMap(function (incoming) {\n        var _a = incoming[0], action = _a.action, state = _a.state;\n        var storeResponses = incoming[1];\n        var actionName = action.type;\n        var matchingResponses = storeResponses\n            .filter(function (response) { return response.name === actionName; });\n        var newActions = matchingResponses.map(function (x) {\n            return {\n                type: x.targetName,\n                payload: state.getIn(x.path, index_1.getMap({})).toJS(),\n                via: \"[response to (\" + actionName + \")]\"\n            };\n        });\n        return Observable_1.Observable.of(newActions);\n    });\n}\nexports.handleResponses = handleResponses;\n//# sourceMappingURL=responses.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction assignFn(extras, incoming) {\n    return Object.assign({}, extras, incoming);\n}\nexports.assignFn = assignFn;\nfunction concatFn(acc, incoming) {\n    return acc.concat(incoming);\n}\nexports.concatFn = concatFn;\n//# sourceMappingURL=subjects.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        _super.call(this);\n        this._value = _value;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject_1.Subject));\nexports.BehaviorSubject = BehaviorSubject;\n//# sourceMappingURL=BehaviorSubject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nexports.InnerSubscriber = InnerSubscriber;\n//# sourceMappingURL=InnerSubscriber.js.map","\"use strict\";\nvar root_1 = require('./util/root');\nvar toSubscriber_1 = require('./util/toSubscriber');\nvar observable_1 = require('./symbol/observable');\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('./Subscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nexports.OuterSubscriber = OuterSubscriber;\n//# sourceMappingURL=OuterSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('./Observable');\nvar Subscriber_1 = require('./Subscriber');\nvar Subscription_1 = require('./Subscription');\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nvar SubjectSubscription_1 = require('./SubjectSubscription');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('./Subscription');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nvar isArray_1 = require('./util/isArray');\nvar isObject_1 = require('./util/isObject');\nvar isFunction_1 = require('./util/isFunction');\nvar tryCatch_1 = require('./util/tryCatch');\nvar errorObject_1 = require('./util/errorObject');\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar scan_1 = require('../../operator/scan');\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar take_1 = require('../../operator/take');\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar ScalarObservable_1 = require('./ScalarObservable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nexports.ArrayObservable = ArrayObservable;\n//# sourceMappingURL=ArrayObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nexports.EmptyObservable = EmptyObservable;\n//# sourceMappingURL=EmptyObservable.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nexports.ScalarObservable = ScalarObservable;\n//# sourceMappingURL=ScalarObservable.js.map","\"use strict\";\nvar ArrayObservable_1 = require('./ArrayObservable');\nexports.of = ArrayObservable_1.ArrayObservable.of;\n//# sourceMappingURL=of.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexports.MapOperator = MapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));\n}\nexports.mergeMap = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexports.MergeMapOperator = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapSubscriber = MergeMapSubscriber;\n//# sourceMappingURL=mergeMap.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    var hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return this.lift(new ScanOperator(accumulator, seed, hasSeed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) { hasSeed = false; }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root_1.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n//# sourceMappingURL=iterator.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map","\"use strict\";\nvar root_1 = require('../util/root');\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","\"use strict\";\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nexports.isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map","\"use strict\";\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nexports.isPromise = isPromise;\n//# sourceMappingURL=isPromise.js.map","\"use strict\";\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nexports.isScheduler = isScheduler;\n//# sourceMappingURL=isScheduler.js.map","\"use strict\";\n/**\n * window: browser in DOM main thread\n * self: browser in WebWorker\n * global: Node.js/other\n */\nexports.root = (typeof window == 'object' && window.window === window && window\n    || typeof self == 'object' && self.self === self && self\n    || typeof global == 'object' && global.global === global && global);\nif (!exports.root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n}\n//# sourceMappingURL=root.js.map","\"use strict\";\nvar root_1 = require('./root');\nvar isArrayLike_1 = require('./isArrayLike');\nvar isPromise_1 = require('./isPromise');\nvar isObject_1 = require('./isObject');\nvar Observable_1 = require('../Observable');\nvar iterator_1 = require('../symbol/iterator');\nvar InnerSubscriber_1 = require('../InnerSubscriber');\nvar observable_1 = require('../symbol/observable');\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike_1.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root_1.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator_1.iterator] === 'function') {\n        var iterator = result[iterator_1.iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable_1.observable] === 'function') {\n        var obs = result[observable_1.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nexports.subscribeToResult = subscribeToResult;\n//# sourceMappingURL=subscribeToResult.js.map","\"use strict\";\nvar Subscriber_1 = require('../Subscriber');\nvar rxSubscriber_1 = require('../symbol/rxSubscriber');\nvar Observer_1 = require('../Observer');\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","\"use strict\";\nvar errorObject_1 = require('./errorObject');\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map"]}